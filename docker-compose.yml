services:
    postgres:
        container_name: ms_pg_sql
        image: postgres
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            PGDATA: /var/lib/postgresql/data
        volumes:
            - postgres:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        networks:
            - microservices-net
        restart: unless-stopped

    pgadmin:
        container_name: ms_pg_admin
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
            PGADMIN_CONFIG_SERVER_MODE: "False"
        ports:
            - "5050:80"
        volumes:
            - pgadmin:/var/lib/pgadmin
        networks:
            - microservices-net
        restart: unless-stopped

    mongodb:
        container_name: ms_mongo_db
        image: mongo
        ports:
            - "27017:27017"
        volumes:
            - mongo:/data
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}

    mongo-express:
        container_name: ms_mongo_express
        image: mongo-express
        ports:
            - "8081:8081"
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
            ME_CONFIG_MONGODB_SERVER: mongodb
        restart: unless-stopped

    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        container_name: zookeeper
        environment:
            ZOOKEEPER_SERVER_ID: ${ZOOKEEPER_SERVER_ID}
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - "22181:2181"
        networks:
            - microservices-net

    kafka:
        image: confluentinc/cp-kafka:7.2.15
        container_name: ms_kafka
        environment:
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
        ports:
            - "9092:9092"
        networks:
            - microservices-net
        depends_on:
            - zookeeper

    mail-dev:
        container_name: ms_mail_dev
        image: maildev/maildev
        ports:
            - "1080:1080"
            - "1025:1025"
    zipkin:
        container_name: zipkin
        image: openzipkin/zipkin
        ports:
            - "9411:9411"
        networks:
            - microservices-net

    keycloak:
        container_name: keycloak
        image: quay.io/keycloak/keycloak:24.0.2
        environment:
            KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
            KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
        ports:
            - "9098:8080"
        networks:
            - microservices-net
        command: ["start-dev"]

networks:
    microservices-net:
        driver: bridge

volumes:
    postgres:
    pgadmin:
    mongo: